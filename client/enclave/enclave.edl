enclave {
    from "sgx_pthread.edl" import *;
    from "sgx_tstdc.edl" import sgx_thread_wait_untrusted_event_ocall, sgx_thread_set_untrusted_event_ocall, sgx_thread_setwait_untrusted_events_ocall, sgx_thread_set_multiple_untrusted_events_ocall;
    from "sgx_tkey_exchange.edl" import *;

    include "sgx_key_exchange.h"
    include "sgx_trts.h"

    trusted {       
        public sgx_status_t ecall_initialize_ra([out] sgx_ra_context_t *ctx, [in, size=len] uint8_t *key, size_t len);

        public void ecall_start_scoring(void);

        public void ecall_score_element([in, size=len] uint8_t *arr, size_t len, [in, size=mac_len] uint8_t *mac, size_t mac_len);

        public int ecall_receive_score(void);
    };

    untrusted {
        void ocall_print_string([in, string] const char *str);
        void ocall_print_number(int num);
    };
};